name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "CopilotKit"
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9.5"

      - name: Install Dependencies
        run: pnpm i

      - name: Is in prerelease mode
        id: is-in-prerelease-mode
        run: |
          if [ -f ".changeset/pre.json" ]; then
            echo "::set-output name=is_in_prerelease_mode::true"
          else
            echo "::set-output name=is_in_prerelease_mode::false"
          fi

      - name: Get current version
        id: current-version
        run: |
          echo "version=$(node -p "require('./packages/react-core/package.json').version")" >> "$GITHUB_OUTPUT"
          
      - name: NPM Publish
        if: ${{ steps.is-in-prerelease-mode.outputs.is_in_prerelease_mode == 'true' }}
        id: publish
        run: |
          pnpm changeset version
          pnpm changeset publish --no-git-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Get new version
        id: new-version
        run: |
          echo "version=$(node -p "require('./packages/react-core/package.json').version")" >> "$GITHUB_OUTPUT"

      - name: Check if published
        id: check-if-published
        run: |
          if [ "${{ steps.new-version.outputs.version }}" != "${{ steps.current-version.outputs.version }}" ]; then
            echo "::set-output name=published::true"
          else
            echo "::set-output name=published::false"
          fi

      - name: Tag "next" post publish
        if: ${{ steps.check-if-published.outputs.published == 'true' }} && ${{ steps.is-in-prerelease-mode.outputs.is_in_prerelease_mode == 'true' }}
        run: |
          echo "Will tag next"

      - name: Put `main` back in prerelease mode
        if: ${{ github.ref == 'refs/heads/main' && steps.check-if-published.outputs.published == 'true' }}
        run: |
          if [ ! -f ".changeset/pre.json" ]; then
            pnpm changeset pre enter next
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
              git commit -m "chore: entering prerelease mode (next)"
              git push origin main --force
            fi

