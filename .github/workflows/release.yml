name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'CopilotKit'
    timeout-minutes: 10
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup pnpm 8
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: pnpm i

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm publish-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN_ELEVATED }}

      - name: Get package versions
        id: package-versions
        run: |
          echo "::set-output name=core_version::$(node -p "require('./packages/react-core/package.json').version")"
          echo "::set-output name=textarea_version::$(node -p "require('./packages/react-textarea/package.json').version")"
          echo "::set-output name=ui_version::$(node -p "require('./packages/react-ui/package.json').version")"

      - name: Create composite version
        id: composite-version
        run: |
          echo "::set-output name=version::core-${{ steps.package-versions.outputs.core_version }}_textarea-${{ steps.package-versions.outputs.textarea_version }}_ui-${{ steps.package-versions.outputs.ui_version }}"
            
      - name: Create Composite Git tag
        run: |
          git tag -f ${{ steps.composite-version.outputs.version }}

      - name: Push Composite Git tag
        run: |
          git push origin ${{ steps.composite-version.outputs.version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.composite-version.outputs.version }}
          release_name: Release ${{ steps.composite-version.outputs.version }}
          draft: false
          prerelease: false
